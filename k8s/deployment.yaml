apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgre  # Deployment name for managing PostgreSQL pods
spec:
  replicas: 1  # Creates one replica (one PostgreSQL pod)
  selector:
    matchLabels:  # Selector ensures pods have the label "app: postgre"
      app: postgre
  template:
    metadata:
      labels:  # Assigns the label "app: postgre" to pods created by this deployment
        app: postgre
    spec:
      containers:
      - name: postgre  # Container name within the pod
        image: postgres:13.1  # Docker image for the PostgreSQL database
        env:  # Environment variables for the container
          - name: POSTGRES_PASSWORD
            value: passw0rd2024!  # Password for the PostgreSQL user (consider using a secrets management tool)
          - name: POSTGRES_USER
            value: reviewfilmes  # Username for the PostgreSQL database
          - name: POSTGRES_DB
            value: reviewfilmes  # Name of the PostgreSQL database
        ports:  # Exposes the container port 5432 for service access
          - containerPort: 5432
---
apiVersion: v1
kind: service 
metadata: 
  name: postgre
spec:
  selector:
    app: postgre
  ports:
  - port: 5432
#Deploy aplicação web
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reviewfilmes 
spec:
  replicas: 1 
  selector:
    matchLabels: 
      app: reviewfilmes
  template:
    metadata:
      labels: 
        app: reviewfilmes
    spec:
      containers:
      - name: reviewfilmes 
        image: elieldiniz/review-filmes-test1:v2
        env:  
          - name: ASPNETCORE_HTTP_PORTS
            value: "8080"
          - name: connectionStrings__defautConnection
            value: "host=postgre;database=reviewfilmes;Username=reviewfilmes;Password=passw0rd2024!"  
        ports: 
          - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: reviewfilmes
spec:
  selector:
    app: reviewfilmes
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
      #nodePort: 30000
  type: LoadBalancer

    